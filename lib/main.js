// Generated by CoffeeScript 1.3.1
(function() {
  var INTRO_STRING, checksum, ifSpeakErrorShowError, makeSpeakHash, saySo, showError, toHash;

  INTRO_STRING = 'Please enter your message.';

  checksum = function(string) {
    var chk, chr, i;
    chk = 0;
    for (i in string) {
      chr = string[i];
      chk += chr.charCodeAt(0) * (i + 1);
    }
    return chk % 10;
  };

  toHash = function(input) {
    var base64, check, deflated, encoded;
    deflated = RawDeflate.deflate(input);
    base64 = Base64.toBase64(deflated);
    check = checksum(base64);
    encoded = base64 + check;
    if (window.location.search || window.location.search !== '') {
      history.pushState({}, "", "/");
    }
    window.location.hash = encoded;
    return true;
  };

  showError = function(msg) {
    msg = msg != null ? msg : '<b>Sorry, it seems Lalo.li - Short Voice Message Service does not work correctly on your plattform.</b><br>Please download the latest desktop version of <a href="https://www.google.com/chrome">Chrome</a> or <a href="http://www.mozilla.org/en-US/firefox/new/">Firefox</a>!<br><b>Technical Background</b>: Lalo.li works with <a href="https://developer.mozilla.org/En/Using_web_workers">Webworkers</a> and <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays">TypedArrays</a>.<br>These are cutting edge HTML5 features currently only <i>fully</i> supported by the browsers mentioned above.';
    $('#error').html(msg).fadeIn();
    return false;
  };

  ifSpeakErrorShowError = function(msg) {
    if (window.speak_error === true) {
      return showError();
    }
  };

  makeSpeakHash = function() {
    var dataobj;
    dataobj = {
      text: $('#text').val(),
      amplitude: parseInt($('#amplitude').val()),
      wordgap: parseInt($('#wordgap').val()),
      pitch: parseInt($('#pitch').val()),
      speed: parseInt($('#speed').val())
    };
    return toHash(JSON.stringify(dataobj));
  };

  saySo = function(whatToSay, amplitude, wordgap, pitch, speed) {
    var text;
    if (amplitude == null) {
      amplitude = null;
    }
    if (wordgap == null) {
      wordgap = null;
    }
    if (pitch == null) {
      pitch = null;
    }
    if (speed == null) {
      speed = null;
    }
    text = (whatToSay != null ? whatToSay : $('#text').val()) || INTRO_STRING;
    amplitude = amplitude != null ? amplitude : parseInt($('#amplitude').val()) || 100;
    wordgap = wordgap != null ? wordgap : parseInt($('#wordgap').val()) || 0;
    pitch = pitch != null ? pitch : parseInt($('#pitch').val()) || 50;
    speed = speed != null ? speed : parseInt($('#speed').val()) || 175;
    try {
      return speak(text, {
        amplitude: amplitude,
        wordgap: wordgap,
        pitch: pitch,
        speed: speed
      });
    } catch (error) {
      return window.speak_error = true;
    } finally {
      ifSpeakErrorShowError();
      return text;
    }
  };

  $(function() {
    $(".dial").knob();
    return $(window).load(function() {
      var base64, check, datahash, dataobj, deflated, encoded, input;
      window.onerror = function(message, url, linenumber) {
        return showError();
      };
      if ($.browser.opera) {
        showError();
      }
      datahash = window.location.hash || window.location.search;
      if (datahash) {
        encoded = datahash.replace(/^(#|\?)/, '');
        base64 = encoded.slice(0, (encoded.length - 2) + 1 || 9e9);
        check = parseInt(encoded.slice(encoded.length - 1, encoded.length + 1 || 9e9));
        if (check !== checksum(base64)) {
          $('#text').val(saySo('Something got corrupted!'));
        } else {
          deflated = Base64.fromBase64(base64);
          input = RawDeflate.inflate(deflated);
          dataobj = JSON.parse(input);
          $('#text').val(dataobj.text);
          $('#amplitude').val(parseInt(dataobj.amplitude));
          $('#amplitude').trigger('configure');
          $('#wordgap').val(parseInt(dataobj.wordgap));
          $('wordgap').trigger('configure');
          $('#pitch').val(parseInt(dataobj.pitch));
          $('#pitch').trigger('configure');
          $('#speed').val(parseInt(dataobj.speed));
          $('#speed').trigger('configure');
          window.setTimeout((function() {
            return saySo(dataobj.text);
          }), 250);
        }
      } else {
        window.setTimeout((function() {
          return saySo($('#text').val());
        }), 500);
      }
      if ($('#text').val() === '') {
        $('#text').val(INTRO_STRING);
      }
      $('#controllarea').css('visibility', 'visible').hide().fadeIn('slow');
      $("#text").focus((function() {
        return this.select();
      }));
      $("#text").get(0).focus();
      window.setTimeout((function() {
        return saySo('i love you');
      }), 1000 * 60 * 15);
      $('#speak').on('submit', function(e) {
        console.log('submit');
        try {
          return saySo();
        } catch (error) {
          return showError();
        } finally {
          return false;
        }
      });
      $('#text').on('keyup', (function(e) {
        return makeSpeakHash();
      }));
      $(".dial").trigger('configure', {
        'release': (function(v, ipt) {
          makeSpeakHash();
          return console.log('release in dial');
        })
      });
      $("#twitter").on('click', function() {
        return this.href = 'http://twitter.com/intent/tweet?text=' + encodeURIComponent('Voice Message') + '&url=http://www.lalo.li/?' + (window.location.hash.slice(1) || window.location.search.slice(1));
      });
      $("#gplus").on('click', function() {
        return this.href = 'https://plus.google.com/share?url=http://www.lalo.li/?' + (window.location.hash.slice(1) || window.location.search.slice(1));
      });
      return $("#facebook").on('click', function() {
        return this.href = 'https://www.facebook.com/sharer.php?u=http://www.lalo.li/?' + (window.location.hash.slice(1) || window.location.search.slice(1)) + '&t=' + encodeURIComponent('Voice Message');
      });
    });
  });

}).call(this);
