// Generated by CoffeeScript 1.3.1
(function() {
  var errorCallback, successCallback;

  errorCallback = function(e) {
    var tec_error, _ref, _ref1;
    console.log(e);
    tec_error = (_ref = (_ref1 = e.message) != null ? _ref1 : e.name) != null ? _ref : e;
    return $('#mirror').html('<div id="error"><h1>Uh oh....</h1><p>Things don\'t always turn out the way they should! Something happened, and instead of seeing yourself in this awesome HTML5 mirror, you just see this error message. I\'m so sorry, i really am. Ok, ok, lets work together here. How can we fix this? To make this HTML5 mirror work you need:\
  <ul>\
    <li>a webcam</li>\
    <li>a modern HTML5 browser</li>\
    <li>that supports your webcam</li>\
    <li>currently this means (more or less): <a href="https://www.google.com/chrome" target="_blank">Google Chrome</a></li>\
  </ul>\
  Oh yeah, and when your browser asks you to access your webcam, you have to click "Allow".\
  <br>If this does not solve your problem, and you think it\'s the code and not your browser, just go to <a href="https://github.com/franzenzenhofer/Spiegel">github</a> and start forking - it\'s open source!<p>\
  <code>ERROR: ' + tec_error + '</code>\
  </div>');
  };

  successCallback = function(v, stream) {
    var goFullscreen;
    goFullscreen = function(elem) {
      if (typeof elem.webkitRequestFullScreen === "function") {
        elem.webkitRequestFullScreen();
      }
      if (typeof elem.mozRequestFullScreen === "function") {
        elem.mozRequestFullScreen();
      }
      return typeof elem.requestFullScreen === "function" ? elem.requestFullScreen() : void 0;
    };
    $(v).hide();
    $('#mirror').html(v);
    $(v).fadeIn(3500);
    $('#fullscreen').fadeIn(2000).click(function() {
      return goFullscreen(v);
    });
    v.addEventListener('click', function() {
      return goFullscreen();
    });
    return v.addEventListener('load', function() {
      return goFullscreen();
    });
  };

  Sinne.getUserVideo(successCallback, errorCallback, {
    id: "vid",
    controls: false
  });

}).call(this);
